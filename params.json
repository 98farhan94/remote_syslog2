{"name":"remote_syslog2","tagline":"Lightweight self-contained daemon for reading local files and emitting remote syslog (without using local syslog daemon)","body":"# About\r\n\r\nRemote_syslog tails one or more log files and sends syslog messages to a\r\nremote central syslog server. It generates packets itself, ignoring the system\r\nsyslog daemon, so its configuration doesn't affect system-wide logging.\r\n\r\nUses:\r\n\r\n * Collecting logs from servers & daemons which don't natively support syslog\r\n * When reconfiguring the system logger is less convenient than a\r\n   purpose-built daemon (e.g., automated app deployments)\r\n * Aggregating files not generated by daemons (e.g., package manager logs)\r\n\r\nThis code is tested with the hosted log management service [Papertrail]\r\nand should work for transmitting to any syslog server.\r\n\r\n## Download\r\n\r\nVisit [Releases][].\r\n\r\n## Migrating from remote_syslog 1\r\n\r\nremote_syslog2 is a rewrite of the ruby [remote_syslog] package. Not all\r\nfeatures of the ruby version are supported, and there are some backwards\r\nincompatible changes.\r\n\r\n### Which should I use?\r\n\r\nUse remote_syslog2 (this README and application) unless you have a\r\nspecific reason to use remote_syslog1.\r\n\r\n### Changes from remote_syslog 1\r\n\r\n* The syntax of some command-line arguments have changed slightly,\r\nthough most are identical.\r\n* Default hostname has been removed. Either the `host` config file\r\noption or the `-d` invocation flag are required.\r\n\r\n\r\n\r\n## Installing\r\n\r\nPrecompiled binaries for Mac, Linux and Windows are available on the\r\n[remote_syslog2 releases page][releases].\r\n\r\nUntar the package, copy the \"remote_syslog\" executable into your $PATH,\r\nand then customize the included example_config.yml with the log file paths\r\nto read and the host/port to log to.\r\n\r\nOptionally, move and rename the configuration file to `/etc/log_files.yml` so\r\nthat remote_syslog picks it up automatically. For example:\r\n\r\n    sudo cp ./remote_syslog /usr/local/bin\r\n    sudo cp example_config.yml /etc/log_files.yml\r\n    sudo vi /etc/log_files.yml\r\n\r\nConfiguration directives can also be specified as command-line arguments (below).\r\n\r\n## Usage\r\n\r\n    Usage of remote_syslog2:\r\n      -c, --configfile=\"/etc/log_files.yml\": Path to config\r\n          --debug-log-cfg=\"\": the debug log file\r\n      -d, --dest-host=\"\": Destination syslog hostname or IP\r\n      -p, --dest-port=514: Destination syslog port\r\n          --eventmachine-tail=false: No action, provided for backwards compatibility\r\n      -f, --facility=\"user\": Facility\r\n          --hostname=\"\": Local hostname to send from\r\n          --log=\"<root>=INFO\": \"logging configuration <root>=INFO;first=TRACE\"\r\n          --new-file-check-interval={0}: How often to check for new files\r\n      -D, --no-detach=false: Don't daemonize and detach from the terminal\r\n          --no-eventmachine-tail=false: No action, provided for backwards compatibility\r\n          --pid-file=\"\": Location of the PID file\r\n      -s, --severity=\"notice\": Severity\r\n          --tcp=false: Connect via TCP (no TLS)\r\n          --tls=false: Connect via TCP with TLS\r\n\r\n\r\n## Example\r\n\r\nDaemonize and collect messages from files listed in `./example_config.yml` as\r\nwell as the file `/var/log/mysqld.log`. Write PID to `/tmp/remote_syslog.pid`\r\nand send to port `logs.papertrailapp.com:12345`:\r\n\r\n    $ remote_syslog -c example_config.yml -p 12345 --pid-file=/tmp/remote_syslog.pid /var/log/mysqld.log\r\n\r\nStay attached to the terminal, look for and use `/etc/log_files.yml` if it\r\nexists, and send with facility local0 to `a.example.com:514`:\r\n\r\n    $ remote_syslog -D -d a.example.com -f local0 /var/log/mysqld.log\r\n\r\n\r\n## Auto-starting at boot\r\n\r\nSample init files can be found [here](https://github.com/papertrail/remote_syslog2/blob/master/examples/). You may be able to:\r\n\r\n    $ cp examples/remote_syslog.init.d /etc/init.d/remote_syslog\r\n    $ chmod 755 /etc/init.d/remote_syslog\r\n\r\nAnd then ensure it's started at boot, either by using:\r\n\r\n    $ sudo update-rc.d remote_syslog defaults\r\n\r\nor by creating a link manually:\r\n\r\n    $ sudo ln -s /etc/init.d/remote_syslog /etc/rc3.d/S30remote_syslog\r\n\r\nremote_syslog will daemonize by default.\r\n\r\nInit files: [remote_syslog.init.d](https://github.com/papertrail/remote_syslog2/blob/master/examples/remote_syslog.init.d) (init.d), OS X [launchd](https://github.com/papertrail/remote_syslog2/blob/master/examples/com.papertrailapp.remote_syslog.plist), [supervisor](https://github.com/papertrail/remote_syslog2/blob/master/examples/remote_syslog.supervisor.conf), Ubuntu [upstart](https://github.com/papertrail/remote_syslog2/blob/master/examples/remote_syslog.upstart.conf)\r\n\r\n\r\n## Sending messages securely ##\r\n\r\nIf the receiving system supports sending syslog over TCP with TLS, you can\r\npass the `--tls` option when running `remote_syslog`:\r\n\r\n    $ remote_syslog -D --tls -p 1234 /var/log/mysqld.log\r\n\r\nor add `protocol: tls` to your configuration file.\r\n\r\n\r\n## Configuration\r\n\r\nBy default, remote_syslog looks for a configuration in `/etc/log_files.yml`.\r\n\r\nThe archive comes with a [sample config](https://github.com/papertrail/remote_syslog2/blob/master/example_config.yml). Optionally:\r\n\r\n    $ cp example_config.yml.example /etc/log_files.yml\r\n\r\n`log_files.yml` has filenames to log from (as an array) and hostname and port\r\nto log to (as a hash). Wildcards are supported using * and standard shell\r\nglobbing. Filenames given on the command line are additive to those in\r\nthe config file.\r\n\r\nOnly 1 destination server is supported; the command-line argument wins.\r\n\r\n    files:\r\n     - /var/log/httpd/access_log\r\n     - /var/log/httpd/error_log\r\n     - /var/log/mysqld.log\r\n     - /var/run/mysqld/mysqld-slow.log\r\n    destination:\r\n      host: logs.papertrailapp.com\r\n      port: 12345\r\n      protocol: tls\r\n\r\nremote_syslog sends the name of the file without a path (\"mysqld.log\") as\r\nthe syslog tag (program name).\r\n\r\nAfter changing the configuration file, restart `remote_syslog` using the\r\ninit script or by manually killing and restarting the process. For example:\r\n\r\n    /etc/init.d/remote_syslog restart\r\n\r\n\r\n## Advanced Configuration (Optional)\r\n\r\nHere's an [advanced config](https://github.com/papertrail/remote_syslog2/blob/master/examples/log_files.yml.example.advanced) which uses all options.\r\n\r\n### Override hostname\r\n\r\nProvide `--hostname somehostname` or use the `hostname` configuration option:\r\n\r\n    hostname: somehostname\r\n\r\n\r\n### Detecting new files\r\n\r\nremote_syslog automatically detects and activates new log files that match\r\nits file specifiers. For example, `*.log` may be provided as a file specifier,\r\nand remote_syslog will detect a `some.log` file created after it was started.\r\nGlobs are re-checked every 10 seconds.\r\n\r\nNote: messages may be written to files in the 0-10 seconds between when the\r\nfile is created and when the periodic glob check detects it. This data is not\r\nacted on.\r\n\r\nIf globs are specified on the command-line, enclose each one in single-quotes\r\n(`'*.log'`) so the shell passes the raw glob string to remote_syslog (rather\r\nthan the current set of matches). This is not necessary for globs defined in\r\nthe config file.\r\n\r\n\r\n### Log rotation\r\n\r\nExternal log rotation scripts often move or remove an existing log file\r\nand replace it with a new one (at a new inode). The Linux standard script\r\n[logrotate](http://iain.cx/src/logrotate/) supports a `copytruncate` config\r\noption.  With that option, `logrotate` will copy files, operate on the copies,\r\nand truncate the original so that the inode remains the same.\r\n\r\nThis comes closest to ensuring that programs watching these files (including\r\n`remote_syslog`) will not be affected by, or need to be notified of, the\r\nrotation. The only tradeoff of `copytruncate` is slightly higher disk usage\r\nduring rotation, so we recommend this option whether or not you use\r\n`remote_syslog`.\r\n\r\n\r\n### Excluding files from being sent\r\n\r\nProvide one or more regular expressions to prevent certain files from being\r\nmatched.\r\n\r\n    exclude_files:\r\n      - \\.\\d$\r\n      - .bz2\r\n      - .gz\r\n\r\n\r\n### Excluding lines matching a pattern\r\n\r\nThere may be certain log messages that you do not want to be sent.  These may be\r\nrepetitive log lines that are \"noise\" that you might not be able to filter out\r\neasily from the respective application.  To filter these lines, use the\r\nexclude_patterns with an array or regexes:\r\n\r\n    exclude_patterns:\r\n     - exclude this\r\n     - \\d+ things\r\n\r\n\r\n### Multiple instances\r\n\r\nRun multiple instances to specify unique syslog hostnames.\r\n\r\nTo do that, provide an alternate PID path as a command-line option to the\r\nadditional instance(s). For example:\r\n\r\n    --pid-file=/var/run/remote_syslog_2.pid\r\n\r\nNote: Daemonized programs use PID files to identify whether the program is already\r\nrunning ([more](http://unix.stackexchange.com/questions/12815/what-are-pid-and-lock-files-for/12818#12818)). Like other daemons, remote_syslog will refuse to run as a\r\ndaemon (the default mode) when a PID file is present. If a .pid file is\r\npresent but the daemon is not actually running, remove the PID file.\r\n\r\n### Choosing app name\r\n\r\nremote_syslog uses the log file name (like \"access_log\") as the syslog\r\nprogram name, or what the syslog RFCs call the \"tag.\" This is ideal unless\r\nremote_syslog watches many files that have the same name.\r\n\r\nIn that case, tell remote_syslog to set another program name by creating\r\nsymbolic link to the generically-named file:\r\n\r\n    cd /path/to/logs\r\n    ln -s generic_name.log unique_name.log\r\n\r\nPoint remote_syslog at unique_name.log. It will use that as the program name.\r\n\r\n\r\n## Troubleshooting\r\n\r\nWhen running remote_syslog in the foreground using the `-D` switch, if you\r\nreceive the error:\r\n\r\n    Error creating fsnotify watcher: inotify_init: too many open files\r\n\r\ndetermine the maximum number of inotify instances that can be created using:\r\n\r\n    cat /proc/sys/fs/inotify/max_user_instances\r\n\r\nand then increase this limit using:\r\n\r\n    echo VALUE >> /proc/sys/fs/inotify/max_user_instances\r\n\r\nwhere VALUE is greater than the present setting. Confirm that remote_syslog starts\r\nup and then apply this new value permanently by adding the following to\r\n`/etc/sysctl.conf:`:\r\n\r\n    fs.inotify.max_user_instances = VALUE\r\n\r\n\r\n## Reporting bugs\r\n\r\n1. See whether the issue has already been reported: <https://github.com/papertrail/remote_syslog2/issues/>\r\n2. If you don't find one, create an issue with a repro case.\r\n\r\n\r\n## Development\r\n\r\nremote_syslog2 is written in go, and uses [godep] to manage\r\ndependencies. To get everything set up, [install go][goinstall] then\r\nrun:\r\n\r\n    go get github.com/kr/godep\r\n    go get github.com/mitchellh/gox\r\n    go get github.com/papertrail/remote_syslog2\r\n\r\nTo run tests:\r\n\r\n    # run all tests\r\n    godep go test ./...\r\n    # run all tests except the slower syslog reconnection tests\r\n    godep go test -short ./...\r\n\r\n\r\n## Building\r\n\r\n    make\r\n\r\n\r\n## Contributing\r\n\r\nOnce you've made your great commits:\r\n\r\n1. [Fork][fk] remote_syslog\r\n2. Create a topic branch - `git checkout -b my_branch`\r\n3. Commit the changes without changing the Rakefile or other files unrelated to your enhancement.\r\n4. Push to your branch - `git push origin my_branch`\r\n5. Create a Pull Request or an [Issue][is] with a link to your branch\r\n6. That's it!\r\n\r\n\r\n[Papertrail]: http://papertrailapp.com/\r\n[Releases]: https://github.com/papertrail/remote_syslog2/releases\r\n[remote_syslog]: https://github.com/papertrail/remote_syslog\r\n[releases]: https://github.com/papertrail/remote_syslog2/releases\r\n\r\n[godep]: https://github.com/kr/godep\r\n[goinstall]: http://golang.org/doc/install\r\n\r\n[fk]: http://help.github.com/forking/\r\n[is]: https://github.com/papertrail/remote_syslog/issues/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}